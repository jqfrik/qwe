// <auto-generated />
using System;
using ForksWebAPI.DATA;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WebApi.Migrations
{
    [DbContext(typeof(ForksDbContext))]
    [Migration("20210826191804__init")]
    partial class _init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ForksWebAPI.Common.Client.Bet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BetType");

                    b.Property<string>("BetValue");

                    b.Property<int>("Bookmaker");

                    b.Property<decimal>("Coef");

                    b.Property<int>("Direction");

                    b.Property<string>("EvId");

                    b.Property<int>("ForksCount");

                    b.Property<bool>("IsInitiator");

                    b.Property<bool>("IsReq");

                    b.Property<string>("MatchData");

                    b.Property<string>("OtherData");

                    b.Property<double>("Parametr");

                    b.Property<int>("Sport");

                    b.Property<string>("Team");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Bet");
                });

            modelBuilder.Entity("ForksWebAPI.Common.Client.Fork", b =>
                {
                    b.Property<long>("Id");

                    b.Property<int>("BetType");

                    b.Property<string>("CridId");

                    b.Property<string>("Elid");

                    b.Property<int>("ForkId");

                    b.Property<string>("K1");

                    b.Property<string>("K2");

                    b.Property<long?>("OneBetId");

                    b.Property<decimal>("Profit");

                    b.Property<int>("Sport");

                    b.Property<TimeSpan>("Time");

                    b.Property<long?>("TwoBetId");

                    b.Property<int>("UpdateCount");

                    b.HasKey("Id");

                    b.HasIndex("OneBetId");

                    b.HasIndex("TwoBetId");

                    b.ToTable("Forks");
                });

            modelBuilder.Entity("ForksWebAPI.DATA.Models.RequestAnotherBet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnotherBetNumber");

                    b.Property<string>("CridId")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RequestAnotherBets");
                });

            modelBuilder.Entity("ForksWebAPI.DATA.Models.RequestBetData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CridId")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("RequestBetDatas");
                });

            modelBuilder.Entity("ForksWebAPI.DATA.Models.ResponseAnotherBet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnotherBetNumber");

                    b.Property<string>("CridId")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ResponseAnotherBets");
                });

            modelBuilder.Entity("ForksWebAPI.DATA.Models.ResponseBetData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CridId")
                        .IsRequired();

                    b.Property<DateTime>("DateCreation");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ResponseBetDatas");
                });

            modelBuilder.Entity("ForksWebAPI.DATA.Models.UserDB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Hash")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Key")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Roles");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ForksWebAPI.Common.Client.Fork", b =>
                {
                    b.HasOne("ForksWebAPI.Common.Client.Bet", "OneBet")
                        .WithMany()
                        .HasForeignKey("OneBetId");

                    b.HasOne("ForksWebAPI.Common.Client.Bet", "TwoBet")
                        .WithMany()
                        .HasForeignKey("TwoBetId");
                });
#pragma warning restore 612, 618
        }
    }
}
